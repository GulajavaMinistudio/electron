From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Shelley Vohr <shelley.vohr@gmail.com>
Date: Mon, 11 Mar 2024 16:11:02 +0100
Subject: Fast path for adding props with existing transition

Adapt Node.js tests for https://chromium-review.googlesource.com/c/v8/v8/+/5342763.

This patch can be removed when Node.js handles these changes.

diff --git a/test/parallel/test-util-format.js b/test/parallel/test-util-format.js
index 12e7833bb24457e1b25f4df12b40d82ccfb80941..b57b07f016de6cf7c891936613b3a190495fce81 100644
--- a/test/parallel/test-util-format.js
+++ b/test/parallel/test-util-format.js
@@ -305,7 +305,7 @@ assert.strictEqual(
   '  func: <ref *1> [Function: func] {\n' +
   '    [length]: 0,\n' +
   '    [name]: \'func\',\n' +
-  '    [prototype]: { [constructor]: [Circular *1] }\n' +
+  '    [prototype]: { constructor: [Circular *1] }\n' +
   '  }\n' +
   '}');
 assert.strictEqual(
@@ -318,7 +318,7 @@ assert.strictEqual(
   '      a: <ref *1> [Function: a] {\n' +
   '        [length]: 0,\n' +
   '        [name]: \'a\',\n' +
-  '        [prototype]: { [constructor]: [Circular *1] }\n' +
+  '        [prototype]: { constructor: [Circular *1] }\n' +
   '      }\n' +
   '    },\n' +
   '    [length]: 1\n' +
@@ -333,7 +333,7 @@ assert.strictEqual(
   '    func: <ref *1> [Function: func] {\n' +
   '      [length]: 0,\n' +
   '      [name]: \'func\',\n' +
-  '      [prototype]: { [constructor]: [Circular *1] }\n' +
+  '      [prototype]: { constructor: [Circular *1] }\n' +
   '    }\n' +
   '  }\n' +
   '}');
@@ -345,7 +345,7 @@ assert.strictEqual(
   '  func: <ref *1> [Function: func] {\n' +
   '    [length]: 0,\n' +
   '    [name]: \'func\',\n' +
-  '    [prototype]: { [constructor]: [Circular *1] }\n' +
+  '    [prototype]: { constructor: [Circular *1] }\n' +
   '  }\n' +
   '} {\n' +
   '  foo: \'bar\',\n' +
@@ -353,7 +353,7 @@ assert.strictEqual(
   '  func: <ref *1> [Function: func] {\n' +
   '    [length]: 0,\n' +
   '    [name]: \'func\',\n' +
-  '    [prototype]: { [constructor]: [Circular *1] }\n' +
+  '    [prototype]: { constructor: [Circular *1] }\n' +
   '  }\n' +
   '}');
 assert.strictEqual(
@@ -364,7 +364,7 @@ assert.strictEqual(
   '  func: <ref *1> [Function: func] {\n' +
   '    [length]: 0,\n' +
   '    [name]: \'func\',\n' +
-  '    [prototype]: { [constructor]: [Circular *1] }\n' +
+  '    [prototype]: { constructor: [Circular *1] }\n' +
   '  }\n' +
   '} %o');
 
diff --git a/test/parallel/test-util-inspect.js b/test/parallel/test-util-inspect.js
index 4c9e0d683fe7d0c79d133079b1575ebaf1a974c7..7c576e2a5ff9b136662ca35ba5639a390ec5b036 100644
--- a/test/parallel/test-util-inspect.js
+++ b/test/parallel/test-util-inspect.js
@@ -3187,7 +3187,7 @@ assert.strictEqual(
       '  constructor: <ref *1> [Function: Fhqwhgads] {\n' +
       '    [length]: 0,\n' +
       "    [name]: 'Fhqwhgads',\n" +
-      '    [prototype]: { [constructor]: [Circular *1] }\n' +
+      '    [prototype]: { constructor: [Circular *1] }\n' +
       '  }\n' +
       '}'
   );
